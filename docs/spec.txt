Špecifikácia remoteplayeru, verzia 0.4 (koncept)

{server}
Umožnuje klientom prehrávať média z knižnice medií.

player: jednoduchý blokujúci playbin, ktorý bude prehrávať zo zásobníka

library: všetky fajly s adresára

interface: odošle klientovy zoznam medií, umožní klientovy prehrať medium z
knižnice a po pripojení pošle klientom playlist_content a ak sa prehráva
skladba, potom aj play_progress správu.

interface bude implementovaný pomocou ZMQ ako clone pattern client/server a
bude poskytovať nasledujúce funkcie:

	* list_media, ktorá vráti zoznam medií
	* play, ktorá prehrá skladbu z playlistu
	* pause, ktorá pozastaví prehrávanie aktuálnej skladby
	* stop, zastavenie prehrávania
	* play_progress, update priebehu prehrávania (každých 10s)
	* identify, vráti informácie o serveru
	* playlist_content, update obsahu playlistu
	* playlist_add, pridáva skladbu do playlistu
	* playlist_remove, odobera skladbu s playlistu
	* alive, server posiela klientom kazdu 1s (niečo ako ping)
	* seek, ktorá posunie aktualnu skladnu na požadovanú pozíciu
	* volume, posiela server pri zmene hlasitosti
	* set_volume, zmena hlasitosti
	* client_ready, signal serveru, ze je klient pripraveny prijímať správy

Správu play_progress môže GUI odchitiť a zobraziť informácie o prehrávanom
obsahu.

configuration: umožnuje konfigurovať voľby ako port a media home

{{version}}

Build bude označený verziou a dostupný bude aj commit number, server bude tiež
zobrazovať aktuálnu prehrávaciu frontu.


{klient}
Pripojí sa k serveru a požiada o zoznam medií, zobrazí ich a umoží
užívateľovy výber pomocou GUI. GUI bude obsahovať list-box a regex
search entry, z listboxu bude možné vybrať skladbu a pomocou tlačítka
požiadať o jej prehratie. GUI bude tiež obsahovať tlačítko pre
zastavenie prehrávania skladby. Skladby budú v list-boxe zobrazené ako
strom.

Ďalej klient zobrazí aktuálne prehrávanú skladbu a jej priebeh (časovú
os s označenou pozíciou prehrávania).

Zo serveru získa obsah prehrávacej fronty a jednotlivé skladby označí
poradovým číslom (1, 2, ..., N) v zozname skladieb (list-boxe).


{interface API}

list_media [ask]:

	{"cmd":"list_media"}

Umožnuje klientovy získať zoznam medií (knižnicu), odpoveď klientovy vypadá
takto

	{"cmd":"media_library", "items":[
		"path/to/file1",
		"path/to/file2",
		"path/to/file3"
	]}

Knižnica sú jediné dáta na ktoré sa musí klient explicitne opýtať a to kvôly
tomu, že predpokladám tisícky prvkou v knižnici, takže by prípadný oznam mohol
byť veľký aj stovky KB.


play [notify]:

Príkaz umožnuje clientovy prehrať skladbu z playlistu v tvare

	{"cmd":"play", "playlist":PID, "idx":N}

kde PID je cele kladne číslo (size_t) reprezentujúce playlist a N (size_t) je
index skladby v playliste.


pause [notify|news]:

Príkaz unožnuje klientovy pozastaviť prehrávanie aktuálnej skladby, príkaz je v
tvare

	{"cmd":"pause"}

následne server klientom pošle správu play_progress(playback_status=paused).


stop [notify]:

Príkaz umožnuje klientovy zastaviť prehrávanie, príkaz je definovaný
ako

	{"cmd":"stop"}

následne server klientom pošle správu play_progress(media="").


play_progress [news]:

Správu posiela server v pravidelných intervaloch (momentálne 10s)
počas prehrávania skladby.

	{
		"cmd":"play_progress",   // string
		"media":"path/to/file",  // string
		"position":P,            // long
		"duration":D,            // long
		"playlist_idx":N,        // size_t
		"playback_state":S       // int (playing=1,paused=2)
	}

kde P je aktuálna pozícia v nano-sekundách a D je dĺžka skladby v
nano-sekundách a N je pozícia/index aktuálnej skladby v playliste. Platí, že
play_progress sa odkazuje na už existujúci playlist, ak klient ešte nemá k
dispocícii playlist, potom musí pole playlist_idx ignorovať. S predstavuje
prehrávací stav, ktorý je buď v stave 'playing' (1), alebo v stave 'paused'
(2).

Ak klient obdrží play_progress v ktorej media je prázdny reťazec, potom
remoteplayer signalizuje stop (pozri popis stop príkazu).


identify [ask]:

Správa/dotaz identify umožnuje klientovi získať informácie o serveru ako napr.
verziu

	{'cmd':'identify'}

server na dotaz odpovie takto

	{'cmd':'server_desc', 'version':'0.2.0', 'build':'417a36c'}


playlist_content [news]:

Správou informuje server klientou o zmene obsahu playlistu. Správa je
definovaná takto:

	{
		'cmd':'playlist_content',
		'id':N,
		'items':['item1', 'item2', ...]
	}

kde N, identyfikátor playlistu je celé kladné číslo a items obsahuje pole
reťazcou, kde jednotlive reťazece popisuje položky pleylistu.


alive [news]:

remoteplayer posiela príkaz v pravidelných intervaloch (každú 1s) v tvare

	{
		'cmd':'alive',
		'count':N,
		'time_stamp':ISO_STRING
	}

kde N je čítač a ISO_STRING je časové razítko v tvare YYYYMMDDTHHMMSS.ffffff
reprezentované reťazcom.


seek [notify]:

klient posielá správu na zmenu pozície aktuálnej skladby v tvare

	{
		"cmd":"seek",
		"position":POS_IN_SEC,
		"media":"/path/to/file"
	}

kde POS_IN_SEC (int) je nová pozícia skladby.


volume [news]:

posiela server pri zmene hlasitosti v tvare

	{"cmd":"volume", "value":N}

kde N (int) je celé kladné číslo v rozsahu 0 až 100. Server volume spravu
posiela aj pri pripojeni klienta k serveru.


set_volume [notify]:

Príkaz užívateľovi zmenu hlasitosti

	{"cmd":"set_volume",	"value":N}

kde N (int) je celé kladné číslo v rozsahu 0 až 100.


playlist_add [notify]:

Umožnuje klientovy pridať skladbu do playlistu, správa je v tvare

	{"cmd":"playlist_add", "items":["path/to/file1", ...]}


playlist_remove [notify]:

Umožnuje odobrať skladbu z playlistu v tvare

	{"cmd":"playlist_remove", "playlist":PID, "idx":N}

kde PID (size_t) je identifikátor playlistu a N je index skladby s playlistu.
Následne ako reakcia na zmenu playlistu server vyheneruje správu
playlist_content.


client_ready [notify]:

Umožnuje klientom signalizovať, že sú od serveru pripravený príjimať správy, po
obdržaní dotazu client_ready server pošle správy playlist_content a
play_progress.





V prípade neznámeho dotazu odpovie server správou

	{"cmd":"error", "what":"unknown <CMD> command"}
